---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: "{{ .Values.namespace }}"
type: Opaque
data:
  KEYCLOAK_CLIENT_SECRET: U3VwZXJTZWNyZXRLZXljbG9haw==
  VIKUNJA_DATABASE_HOST: dmlrdW5qYS1wb3N0Z3Jlcy52aWt1bmphLnN2Yy5jbHVzdGVyLmxvY2Fs # Base64 encoded value of "vikunja-postgres.vikunja.svc.cluster.local"
  VIKUNJA_DATABASE_USER: dmlrdW5qYQ==                                             # Base64 encoded value of "vikunja"
  VIKUNJA_DATABASE_PASSWORD: U3VQM3JTM2NSZXRQQHNT                                 # Base64 encoded value of "SuP3rS3cRetP@sS"
  VIKUNJA_DATABASE_DATABASE: dmlrdW5qYQ==                                         # Base64 encoded value of "vikunja"
  VIKUNJA_DATABASE_TYPE: cG9zdGdyZXM=                                             # Base64 encoded value of "postgres"

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.deployments.backend.service.name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app: "{{ .Values.deployments.backend.service.name }}"
spec:
  ports:
    - port: 3456
      targetPort: 3456
      protocol: TCP
  selector:
    app: "{{ .Values.deployments.backend.service.name }}"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-pvc
  namespace: "{{ .Values.namespace }}"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.deployments.backend.service.name }}"
  namespace: "{{ .Values.namespace }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.deployments.backend.service.name }}"
  replicas: 1
  template:
    metadata:
      name: "{{ .Values.deployments.backend.service.name }}"
      labels:
        app: "{{ .Values.deployments.backend.service.name }}"
    spec:
      containers:
      - name: backend
        image: "{{ .Values.deployments.backend.image.name }}:{{ .Values.deployments.backend.image.tag }}"
        ports:
        -  containerPort: "{{.Values.deployments.backend.ports.containerPort}}"
        env:
          - name: VIKUNJA_DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: VIKUNJA_DATABASE_HOST
          - name: VIKUNJA_DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: VIKUNJA_DATABASE_USER
          - name: VIKUNJA_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: VIKUNJA_DATABASE_PASSWORD
          - name: VIKUNJA_DATABASE_DATABASE
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: VIKUNJA_DATABASE_DATABASE
          - name: VIKUNJA_DATABASE_TYPE
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: VIKUNJA_DATABASE_TYPE

          - name: OAUTH2_PROVIDER
            value: "keycloak"
          - name: KEYCLOAK_REALM
            value: "vikunja"
          - name: KEYCLOAK_CLIENT_ID
            value: "vikunja"
          - name: KEYCLOAK_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: KEYCLOAK_CLIENT_SECRET
          - name: KEYCLOAK_URL
            value: "http://<your-keycloak-url-here>/auth"

        readinessProbe:
          httpGet:
            path: /health
            port: 3456
          initialDelaySeconds: 10   #wait 10 seconds before starting
          periodSeconds: 180         #run every 180 seconds
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        resources:
          requests:
            memory: "200Mi"   # 200 Mebibyte 
            cpu: "128m"       # 128 millicpu out of 1 vCPU (1000 millicpu)
          limits:
            memory: "500Mi"     # 500 Mebibyte
            cpu: "250m"       # 1/4 of 1 vCPU

        volumeMounts:
        - name: data
          mountPath: /app/vikunja/files
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: backend-pvc
